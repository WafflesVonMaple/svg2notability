from to_notability import *

TEST_AGGREGATED_PATH = [Path(points=[(137.0359344482422+148.5749969482422j),
    (137.01373291015625+148.61776733398438j), (136.99362182617188+148.6476287841797j),
    (136.97567749023438+148.66586303710938j), (136.95774841308594+148.68409729003906j),
    (136.94198608398438+148.69070434570312j), (136.928466796875+148.68699645996094j),
    (136.9149627685547+148.6833038330078j), (136.90370178222656+148.66928100585938j),
    (136.894775390625+148.64625549316406j), (136.88583374023438+148.6232147216797j),
    (136.87924194335938+148.59117126464844j), (136.87506103515625+148.55140686035156j),
    (136.8583221435547+148.39236450195312j), (136.88015747070312+148.1099395751953j),
    (136.94569396972656+147.78749084472656j), (137.40087890625+146.22169494628906j),
    (138.99148559570312+143.58482360839844j), (140.24334716796875+142.3515625j),
    (140.70741271972656+141.88172912597656j), (141.162841796875+141.59092712402344j),
    (141.67889404296875+141.5203094482422j), (142.765625+141.4709014892578j),
    (143.94325256347656+142.63539123535156j), (145.58358764648438+143.42343139648438j),
    (146.503662109375+143.81187438964844j), (147.47784423828125+144.09213256835938j),
    (148.37265014648438+144.16717529296875j), (148.75216674804688+144.2424774169922j),
    (149.12530517578125+144.28125j), (149.48828125+144.2109375j),
    (150.8194122314453+143.6942901611328j), (152.1039581298828+141.7109832763672j),
    (153.24530029296875+139.0593719482422j)], attrs=Attrs(width='3.499999761581421', color='#006fff'))]

def test_curve_properties():
    curve_properties = generate_curve_properties(TEST_AGGREGATED_PATH)
    assert curve_properties.points == '3\t\tC3\x93\x14C\x84\x03\tC&\x9e\x14C^\xfe\x08C\xcb\xa5\x14C\xc6\xf9\x08Cv\xaa\x14C/\xf5\x08C!\xaf\x14C&\xf1\x08C\xd2\xb0\x14C\xb0\xed\x08C\xdf\xaf\x14C;\xea\x08C\xed\xae\x14CY\xe7\x08CV\xab\x14C\x10\xe5\x08Cq\xa5\x14C\xc6\xe2\x08C\x8b\x9f\x14C\x16\xe1\x08CW\x97\x14C\x04\xe0\x08C)\x8d\x14C\xbb\xdb\x08Crd\x14CR\xe1\x08C%\x1c\x14C\x19\xf2\x08C\x99\xc9\x13C\xa0f\tC\xc18\x12C\xd2\xfd\nC\xb7\x95\x0fCL>\x0cC\x00Z\x0eC\x19\xb5\x0cC\xb9\xe1\rC\xb0)\rCG\x97\rC\xcc\xad\rC3\x85\rC\x00\xc4\x0eC\x8dx\rCy\xf1\x0fC\xa9\xa2\x0eCf\x95\x11Cfl\x0fC\xf0\x80\x12C\xd7\xcf\x0fCTz\x13C\x96\x17\x10Cf_\x14C\xcc*\x10C\x8e\xc0\x14C\x13>\x10C\x14 \x15C\x00H\x10C\x00}\x15C\x006\x10C\xc5\xd1\x16C\xbd\xb1\x0fC\x9d\x1a\x18C\x03\xb6\rC\xcc>\x19C3\x0f\x0bC'
    assert curve_properties.colors == '\x00o\xff\xff'
    assert curve_properties.numpoints == '"\x00\x00\x00'
    assert curve_properties.width ==  '\xff\xff_@'
    assert curve_properties.fractionalwidths == '\x00\x00\x80?' * 12


def test_letter_a():
    paths = get_paths('letter_a.svg')
    result = aggregate_paths(paths)
    assert('40.17' in str(result))
